---
###################################################################
#
#  OCR service role
#
###################################################################
- name: install required packages via apt-get
  become_user: root
  apt:
    pkg="{{ item }}"
    state=latest
    update_cache=yes
    cache_valid_time=3600
    autoremove=yes
  with_items:
    - imagemagick
    - libpng12-dev
    - zlib1g-dev
    - autoconf
    - automake

- name: configure ocr build directory
  become_user: root
  file:
    state=directory
    path="{{ src_directory }}"
    owner="{{ ocr_user }}"
    group="{{ ocr_user }}"

- name: download and unpack tesseract and leptopnica
  become_user: "{{ ocr_user }}"
  unarchive:
    src="{{ item.url }}"
    dest="{{ src_directory }}"
    copy=no
    owner="{{ ocr_user }}"
    group="{{ ocr_user }}"
    creates="{{ item.dir }}"
  with_items:
    - { url: "{{ tesseract_url }}", dir: "tesseract-{{ tesseract_version }}" }
    - { url: "{{ leptonica_url }}", dir: "leptonica-{{ leptonica_version }}" }

- name: download tessdata for our default language
  become_user: "{{ ocr_user }}"
  get_url:
    url="{{ tessdata_url }}/{{ item }}"
    dest="{{ src_directory }}/tesseract-{{ tesseract_version }}/tessdata"
  with_items: "{{ tesseract_lang_data }}"

- name: make leptonica configure executable
  become_user: "{{ ocr_user }}"
  file:
    path="{{ src_directory }}/leptonica-{{ leptonica_version }}/configure"
    mode=u+rwx

- name: make leptonica
  become_user: "{{ ocr_user }}"
  command: "{{ item }}"
  args:
    chdir: "{{ src_directory }}/leptonica-{{ leptonica_version }}"
    creates: "{{ src_directory }}/leptonica-{{ leptonica_version }}/prog/.libs"
  with_items:
    - ./configure
    - make

- name: install leptonica
  become_user: root
  command: make install
  args:
    chdir: "{{ src_directory }}/leptonica-{{ leptonica_version }}"
    creates: /usr/local/bin/leptonica

- name: make tessearct
  become_user: "{{ ocr_user }}"
  command: "{{ item }}"
  args:
    chdir: "{{ src_directory }}/tesseract-{{ tesseract_version }}"
    creates: "{{ src_directory }}/tesseract-{{ tesseract_version }}/api/tesseract"
  with_items:
    - ./configure
    - make

- name: install tessearct
  become_user: root
  command: "{{ item }}"
  args:
    chdir: "{{ src_directory }}/tesseract-{{ tesseract_version }}"
    creates: /usr/local/bin/tesseract
  with_items:
    - make install
    - ldconfig
